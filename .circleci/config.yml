version: 2.1

orbs:
    aws-cli: circleci/aws-cli@1.0.0
    slack: circleci/slack@3.4.2
    jira: circleci/jira@1.1.7

aliases:
    - &restore_cache
        restore_cache:
            key: dependencies-{{ checksum "package-lock.json" }}-2
    - &save_cache
        save_cache:
            key: dependencies-{{ checksum "package-lock.json" }}-2
            paths:
                - node_modules

jobs:

##########################################
########### DEVELOPMENT ##################
##########################################

    # Build - DEV
    build-dev:
        docker:
            - image: circleci/node:latest
        resource_class: xlarge
        steps:
            - checkout
                    
            - *restore_cache
            
            - run:
                name: Build
                command: |
                    # Build Webapp
                    make package
                    #Commit ignoring circleci
                   
                    git config --global user.email "circleci@circleci.com"
                    git config --global user.name "Circleci"
                    
                    git clone git@github.com:NYU-CI/mattermost-webapp.git -b coleridge-develop
        
                    cd mattermost-webapp
                    date >> circle_ci_triggers.txt
                    git add circle_ci_triggers.txt

                    cd ..
                    mv mattermost-webapp.tar.gz ./mattermost-webapp/binaries-files/mattermost-webapp-dev.tar.gz
        
                    cd mattermost-webapp
                    git add .
                    git commit -am "[skip ci] new matermost zip [circleci]"
                    git push origin coleridge-develop
            
            - *save_cache
            
            - store_artifacts:
                path: mattermost-webapp/binaries-files/mattermost-webapp-dev.tar.gz
            
            - slack/notify-on-failure:
                only_for_branches: 'coleridge-develop'

    # Deploy - DEV
    deploy-dev:
        machine: true
        steps:
            - checkout

            - add_ssh_keys:
                fingerprints:
                    - "f8:36:95:9f:01:7f:49:2d:22:a0:92:00:64:cf:a4:8f" 

            - run:
                name: Install Dependencies
                command: |
                    pip install ansible
            - run:
                name: Deploy
                command: |
                    #Retrieving ignoring circleci
                    
                    git config --global user.email "circleci@circleci.com"
                    git config --global user.name "Circleci"
                    
                    git clone git@github.com:NYU-CI/mattermost-webapp.git -b coleridge-develop
                    rm -rf binaries-files/mattermost-webapp-dev.tar.gz
                    cp mattermost-webapp/binaries-files/mattermost-webapp-dev.tar.gz binaries-files/mattermost-webapp-dev.tar.gz
                    # Deploy Webapp
                    ansible-playbook -i ansible/hosts ansible/deploy-dev.yaml --user=circleci
        
            - slack/notify:
                color: '#42e2f4'
                author_name: $CIRCLE_USERNAME
                message: 'There was a commit on branch: $CIRCLE_BRANCH'
                title: '[DEVELOPMENT] Job/Deploy Succesfully completed'

            - slack/notify-on-failure:
                only_for_branches: 'coleridge-develop'


# ##########################################
# ############### STAGING ##################
# ##########################################

    build-stg:
        docker:
            - image: circleci/node:latest
        resource_class: xlarge
        steps:
            - checkout

            - aws-cli/setup:
                aws-access-key-id: AWS_ID
                aws-secret-access-key: AWS_KEY
                aws-region: AWS_REGION
                    
            - *restore_cache
            
            - run:
                name: Build
                command: |
                    # Build Webapp
                    make package
                    #Commit ignoring circleci
                
                    git config --global user.email "circleci@circleci.com"
                    git config --global user.name "Circleci"
                    
                    git clone git@github.com:NYU-CI/mattermost-webapp.git -b coleridge-staging
        
                    cd mattermost-webapp
                    date >> circle_ci_triggers.txt
                    git add circle_ci_triggers.txt

                    cd ..
                    aws s3 cp mattermost-webapp.tar.gz s3://adrf-stg-mattermost
                    mv mattermost-webapp.tar.gz ./mattermost-webapp/binaries-files/mattermost-webapp-stg.tar.gz
        
                    cd mattermost-webapp
                    git add .
                    git commit -am "[skip ci] new matermost zip [circleci]"
                    git push origin coleridge-staging
            
            - *save_cache
            
            - store_artifacts:
                path: mattermost-webapp/binaries-files/mattermost-webapp-stg.tar.gz
            
            - slack/notify-on-failure:
                only_for_branches: 'coleridge-staging'

    # Deploy - STG
    deploy-stg:
        machine: true
        steps:
            - checkout

            - add_ssh_keys:
                fingerprints:
                    - "f8:36:95:9f:01:7f:49:2d:22:a0:92:00:64:cf:a4:8f" 

            - run:
                command: |
                    sudo apt-get update && sudo apt-get install -y openvpn
                name: Install OpenVPN

            - run:
                name: Install Dependencies
                command: |
                    pip install ansible
            - run:
                name: Deploy
                no_output_timeout: 60m
                command: |
                    # Retrieving env vars for VPN - LOGIN
                    echo -e "$login" > vpn.login
                    sed -i 's/\\//g' vpn.login
                    # Retrieving env vars for VPN - SOPHOS
                    echo -e "$sophos" > sophos.ovpn
                    sed -i 's/\\//g' sophos.ovpn
                
                    # Connect to VPN
                    sudo openvpn --config sophos.ovpn --auth-user-pass vpn.login > openvpn.log 2>&1 &
                    sleep 20
                    echo $(cat openvpn.log)
                    #Retrieving ignoring circleci
                    
                    git config --global user.email "circleci@circleci.com"
                    git config --global user.name "Circleci"
                    
                    git clone git@github.com:NYU-CI/mattermost-webapp.git -b coleridge-staging
                    rm -rf binaries-files/mattermost-webapp-stg.tar.gz
                    cp mattermost-webapp/binaries-files/mattermost-webapp-stg.tar.gz binaries-files/mattermost-webapp-stg.tar.gz
                    # Deploy Webapp
                    ansible-playbook -i ansible/hosts ansible/deploy-stg.yaml --user=circleci
        
            - slack/notify:
                color: '#42e2f4'
                author_name: $CIRCLE_USERNAME
                message: 'There was a commit on branch: $CIRCLE_BRANCH'
                title: '[STAGING] Job/Deploy Succesfully completed'

            - slack/notify-on-failure:
                only_for_branches: 'coleridge-staging'


# ##########################################
# ############ PRODUCTION ##################
# ##########################################

    build-prod:
        docker:
            - image: circleci/node:latest
        resource_class: xlarge
        steps:
            - checkout

            - aws-cli/setup:
                aws-access-key-id: AWS_ID
                aws-secret-access-key: AWS_KEY
                aws-region: AWS_REGION
                    
            - *restore_cache
            
            - run:
                name: Build
                command: |
                    # Build Webapp
                    make package
                    #Commit ignoring circleci
                
                    git config --global user.email "circleci@circleci.com"
                    git config --global user.name "Circleci"
                    
                    git clone git@github.com:NYU-CI/mattermost-webapp.git -b coleridge-master
        
                    cd mattermost-webapp
                    date >> circle_ci_triggers.txt
                    git add circle_ci_triggers.txt

                    cd ..
                    aws s3 cp mattermost-webapp.tar.gz s3://adrfmattermostbucket
                    mv mattermost-webapp.tar.gz ./mattermost-webapp/binaries-files/mattermost-webapp-prod.tar.gz
        
                    cd mattermost-webapp
                    git add .
                    git commit -am "[skip ci] new matermost zip [circleci]"
                    git push origin coleridge-master
            
            - *save_cache
            
            - store_artifacts:
                path: mattermost-webapp/binaries-files/mattermost-webapp-prod.tar.gz
            
            - slack/notify-on-failure:
                only_for_branches: 'coleridge-master'

    # Deploy - PROD
    deploy-prod:
        machine: true
        steps:
            - checkout

            - add_ssh_keys:
                fingerprints:
                    - "f8:36:95:9f:01:7f:49:2d:22:a0:92:00:64:cf:a4:8f" 

            - run:
                command: |
                    sudo apt-get update && sudo apt-get install -y openvpn
                name: Install OpenVPN

            - run:
                name: Install Dependencies
                command: |
                    pip install ansible
            - run:
                name: Deploy
                no_output_timeout: 60m
                command: |
                    # Retrieving env vars for VPN - LOGIN
                    echo -e "$login" > vpn.login
                    sed -i 's/\\//g' vpn.login
                    # Retrieving env vars for VPN - SOPHOS
                    echo -e "$sophos" > sophos.ovpn
                    sed -i 's/\\//g' sophos.ovpn
                
                    # Connect to VPN
                    sudo openvpn --config sophos.ovpn --auth-user-pass vpn.login > openvpn.log 2>&1 &
                    sleep 20
                    echo $(cat openvpn.log)
                    #Retrieving tar.gz
                    
                    git config --global user.email "circleci@circleci.com"
                    git config --global user.name "Circleci"
                    
                    git clone git@github.com:NYU-CI/mattermost-webapp.git -b coleridge-master
                    rm -rf binaries-files/mattermost-webapp-prod.tar.gz
                    cp mattermost-webapp/binaries-files/mattermost-webapp-prod.tar.gz binaries-files/mattermost-webapp-prod.tar.gz
                    # Deploy Webapp 
                    ansible-playbook -i ansible/hosts ansible/deploy-prod.yaml --user=circleci
        
            - slack/notify:
                color: '#42e2f4'
                author_name: $CIRCLE_USERNAME
                message: 'There was a commit on branch: $CIRCLE_BRANCH'
                title: '[PRODUCTION] Job/Deploy Succesfully completed'

            - slack/notify-on-failure:
                only_for_branches: 'coleridge-master'

# Orchestrate or schedule a set of jobs
workflows:
    version: 2.1
    workflow-mattermost:
        jobs:        

########### DEVELOPMENT ##################

            - build-dev:
                context: DEV
                filters:
                    branches:
                        only:
                            - coleridge-develop
                post-steps:
                    - jira/notify

            - deploy-dev:
                context: DEV
                requires:
                    - build-dev
                filters:
                    branches:
                        only:
                            - coleridge-develop
                post-steps:
                    - jira/notify

# ########### STAGING ##################

            - build-stg:
                context: STG
                filters:
                    branches:
                        only:
                            - coleridge-staging
                post-steps:
                    - jira/notify

            - deploy-stg:
                context: STG
                requires:
                    - build-stg
                filters:
                    branches:
                        only:
                            - coleridge-staging
                post-steps:
                    - jira/notify
                            
# ########### PRODUCTION ##################

            - slack/approval-notification:
                color: '#ffa500'
                message: '[PRODUCTION] A workflow from branch $CIRCLE_BRANCH needs approval to continue'
                mentions: 'gabriel.freire,leonnardo.campos,filipe.oliveira,rafael.alves,paulo.curado,murilo.carraro,fausto.junqueira,joao.ferreira'
                filters:
                    branches:
                        only:
                            - coleridge-master
                post-steps:
                    - jira/notify

            - waiting-approval:
                type: approval
                filters:
                    branches:
                        only:
                            - coleridge-master
                post-steps:
                    - jira/notify
                            
            - build-prod:
                context: PROD
                requires:
                    - waiting-approval
                filters:
                    branches:
                        only:
                            - coleridge-master
                post-steps:
                    - jira/notify

            - deploy-prod:
                context: PROD
                requires:
                    - build-prod
                filters:
                    branches:
                        only:
                            - coleridge-master
                post-steps:
                    - jira/notify
